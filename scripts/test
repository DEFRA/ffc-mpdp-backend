#!/usr/bin/env sh

set -e
projectRoot="$(a="/$0"; a=${a%/*}; a=${a:-.}; a=${a#/}/; cd "$a/.." || return; pwd)"

service="ffc-mpdp-backend"

show_help() {
  echo "
    Usage: scripts/test [OPTION...]
    Run tests.

    Options:
      -w, --watch   watch tests
      -d, --debug   debug tests
      -h, --help    display this help text
    "
}

while :; do
  case $1 in
    -w|--watch)
      watch="true"
      ;;

    -d|--debug)
      debug="true"
      ;;

    -h|--help)   # Call a "show_help" function to display a synopsis, then exit.
      show_help
      exit
      ;;
    *)
      break
  esac

  shift
done

compose() {
  if [ "${watch}" = "true" ]; then
    docker-compose -f docker-compose.yaml -f docker-compose.test.yaml -f docker-compose.test.watch.yaml -p "${service}-test" $@
  elif [ "${debug}" = "true" ]; then
    docker-compose -f docker-compose.yaml -f docker-compose.test.yaml -f docker-compose.test.watch.yaml -f docker-compose.test.debug.yaml -p "${service}-test" $@
  else
    docker-compose -f docker-compose.yaml -f docker-compose.test.yaml -p "${service}-test" $@
  fi
}

(
  cd "${projectRoot}"

  # create test output folder
  mkdir -p test-output

  # Guarantee clean environment
  compose down -v
  docker-compose -f docker-compose.migrate.yaml -p "${service}-test" down -v

  # Ensure container images are up to date
  compose build
  docker-compose -f docker-compose.migrate.yaml -p "${service}-test" run --rm database-up

  # Run tests
  if [ "${debug}" = "true" ]; then
    compose run --service-ports ${service} ${command}
  else
    compose run ${service} ${command}
  fi

  # Clean up
  compose down -v
)
